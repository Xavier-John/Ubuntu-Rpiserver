version: "3.8"
services:
    aria2Backend:
        image: p3terx/aria2-pro
        container_name: aria2Backend
        environment:
        - PUID=1001
        - PGID=1001
        - TZ='Asia/Kolkata'
        - RPC_PORT=6800
        - LISTEN_PORT=6888
        - RPC_SECRET=ubroot
        volumes:
        - /home/poweruser/Docker_ContainerData/Aria2:/config
        - /mnt/Media/share/Downloads/:/downloads
        ports:
        - 6888:6888
        - 6888:6888/udp
        - 6800:6800
        restart: unless-stopped

    aria2UI:
        image: p3terx/ariang
        container_name: aria2UI
        ports:
        - 6880:6880
        restart: unless-stopped
        labels:
            # required when using --providers.docker.exposedbydefault=false
            - "traefik.enable=true"
            - "traefik.http.routers.aria.rule=Host(`microserver.aria.com`)"
            - "traefik.http.routers.aria.entrypoints=http"
            # - "traefik.docker.network=discovery"
            - "traefik.http.services.aria.loadbalancer.server.port=6880"


    transmission:
        image: linuxserver/transmission
        container_name: transmission
        environment:
          - PUID=1001
          - PGID=1001
          - TZ='Asia/Kolkata'
          - TRANSMISSION_WEB_HOME=/combustion-release/ #optional
          - USER=doc #optional
          - PASS=doc123 #optional
        volumes:
          - /home/poweruser/Docker_ContainerData/Transmission/config:/config
          - /mnt/Media/share/Downloads/:/downloads
          - /home/poweruser/Docker_ContainerData/Transmission/watch:/watch
        ports:
          - 9091:9091
          - 51413:51413
          - 51413:51413/udp
        restart: unless-stopped
        labels:
            # required when using --providers.docker.exposedbydefault=false
            - "traefik.enable=true"
            - "traefik.http.routers.transmission.rule=Host(`microserver.transmission.com`)"
            - "traefik.http.routers.transmission.entrypoints=http"
            # - "traefik.docker.network=discovery"
            - "traefik.http.services.transmission.loadbalancer.server.port=9091"

    plex:
        image: linuxserver/plex
        container_name: plex
        network_mode: host
        environment:
            - PUID=1001
            - PGID=1001
            - VERSION=docker
            - PLEX_CLAIM=claim-ZShpe--SnWeKYnq5xQ1p
        volumes:
            - /home/poweruser/Docker_ContainerData/Plex/:/config
            - /mnt/Media/share/TVShows/:/tv
            - /mnt/Media/share/Movies/:/movies
        restart: unless-stopped
     
    pihole:
        container_name: pihole
        image: pihole/pihole:latest
        ports:
        - "53:53/tcp"
        - "53:53/udp"
        - "67:67/udp"
        - "8053:80/tcp"
        # - "443:443/tcp"
        environment:
        - ServerIP=192.168.1.11
        - PROXY_LOCATION='pihole'
        # - VIRTUAL_HOST='pihole.homeserver.lan'
        - VIRTUAL_PORT=80
        - TZ='Asia/Kolkata'
        - WEBPASSWORD='ubroot'
        # Volumes store your data between container upgrades
        volumes:
        - '/home/poweruser/Docker_ContainerData/pihole/:/etc/pihole/'
        - '/home/poweruser/Docker_ContainerData/pihole/dnsmasq.d/:/etc/dnsmasq.d/'
        dns:
        - 127.0.0.1
        - 1.1.1.1
        # Recommended but not required (DHCP needs NET_ADMIN)
        #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
        cap_add:
        - NET_ADMIN
        restart: unless-stopped
        labels:
            # required when using --providers.docker.exposedbydefault=false
            - "traefik.enable=true"
            - "traefik.http.routers.pihole.rule=Host(`microserver.pihole.com`)"
            - "traefik.http.routers.pihole.entrypoints=http"
            # - "traefik.docker.network=discovery"
            - "traefik.http.services.pihole.loadbalancer.server.port=80"

    portainer:
        container_name: portainer
        image: portainer/portainer
        ports: 
        - "9000:9000/tcp"
        volumes: 
        - "/var/run/docker.sock:/var/run/docker.sock"
        - "/home/poweruser/Docker_ContainerData/Portainer/:/data"
        restart: unless-stopped
        labels:
            # required when using --providers.docker.exposedbydefault=false
            - "traefik.enable=true"
            - "traefik.http.routers.portainer.rule=Host(`microserver.portainer.com`)"
            - "traefik.http.routers.portainer.entrypoints=http"
            # - "traefik.docker.network=discovery"
            - "traefik.http.services.portainer.loadbalancer.server.port=9000"
    Nas:
        container_name: Nas
        image: dperson/samba
        environment:
            TZ: 'Asia/Kolkata'
            USERID: 1001
            GROUPID: 1001
            NMBD: 'true'
        networks:
            - default
        ports:
            - "137:137/udp"
            - "138:138/udp"
            - "139:139/tcp"
            - "445:445/tcp"
        read_only: false
        tmpfs:
            - /tmp
        restart: unless-stopped
        stdin_open: false
        tty: false
        volumes:
            - /mnt/Media/share/:/mount:z
            - /mnt/TimeMachine/:/TimeMachine:z
            - /mnt/Media/shareData/:/Data:z
        command: '-g "fruit:aapl = yes" -g "vfs objects = catia fruit streams_xattr" -g "fruit:model = MacSamba" -g "fruit:time machine = yes" -g "durable handles = yes" -g "kernel oplocks = no" -g "kernel share modes = no" -g "posix locking = no" -g "fruit:advertise_fullsync = true" -g "smb2 leases = yes" -s "NAS;/mount;yes;no;no;nandu,nandujagdish" -s "Airport;/TimeMachine;yes;no;no;nandu,nandujagdish" -s "Data;/Data;yes;no;no;nandujagdish" -u "nandujagdish;ubroot" -u "nandu;nandu"  -p'
    Watchtower:
        container_name: Watchtower
        image: containrrr/watchtower
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        environment:
            WATCHTOWER_CLEANUP: 'true'
            WATCHTOWER_POLL_INTERVAL: 3000
        restart: unless-stopped
    traefik:
        container_name: traefik
        domainname: homedomain.lan
    
        image: traefik:v2.2
        restart: unless-stopped
        # Note I opt to whitelist certain apps for exposure to traefik instead of auto discovery
        # use `--providers.docker.exposedbydefault=true` if you don't want to have to do this
        command:
            - "--providers.docker=true"
            # - "--providers.docker.network=discovery"
            - "--providers.docker.exposedbydefault=false"
            - "--api.insecure=true"
            - "--api.dashboard=true"
            - "--entrypoints.http.address=:80"
            - "--log.level=DEBUG"
        ports:
            - "80:80"
            - "443:443"
            - "8080:8080"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
        networks:
            - default
            # - discovery
        dns:
            - 127.0.0.1
            - 1.1.1.1
    radarr:
        image: linuxserver/radarr
        container_name: radarr
        environment:
          - PUID=1001
          - PGID=1001
          - TZ='Asia/Kolkata'
          
        volumes:
          - /home/poweruser/Docker_ContainerData/radarr:/config
          - /mnt/Media/share/Movies/:/movies
          - /mnt/Media/share/Downloads/:/downloads
        ports:
          - 7878:7878
        restart: unless-stopped
        labels:
            # required when using --providers.docker.exposedbydefault=false
            - "traefik.enable=true"
            - "traefik.http.routers.radarr.rule=Host(`microserver.radarr.com`)"
            - "traefik.http.routers.radarr.entrypoints=http"
            # - "traefik.docker.network=discovery"
            - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    sonarr:
        image: linuxserver/sonarr
        container_name: sonarr
        environment:
          - PUID=1001
          - PGID=1001
          - TZ='Asia/Kolkata'
        volumes:
          - /home/poweruser/Docker_ContainerData/sonarr:/config
          -  /mnt/Media/share/TVShows/:/tv
          - /mnt/Media/share/Downloads/:/downloads
        ports:
          - 8989:8989
        restart: unless-stopped
        labels:
            # required when using --providers.docker.exposedbydefault=false
            - "traefik.enable=true"
            - "traefik.http.routers.sonarr.rule=Host(`microserver.sonarr.com`)"
            - "traefik.http.routers.sonarr.entrypoints=http"
            # - "traefik.docker.network=discovery"
            - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    jackett:
        image: linuxserver/jackett
        container_name: jackett
        environment:
            - PUID=1001
            - PGID=1001
            - TZ='Asia/Kolkata'
            - AUTO_UPDATE=true #optional
        volumes:
            - /home/poweruser/Docker_ContainerData/jackett:/config
            - /mnt/Media/share/Downloads/:/downloads
        ports:
            - 9117:9117
        restart: unless-stopped
        labels:
            # required when using --providers.docker.exposedbydefault=false
            - "traefik.enable=true"
            - "traefik.http.routers.jackett.rule=Host(`microserver.jackett.com`)"
            - "traefik.http.routers.jackett.entrypoints=http"
            # - "traefik.docker.network=discovery"
            - "traefik.http.services.jackett.loadbalancer.server.port=9117"
    jellyfin:
        image: linuxserver/jellyfin
        container_name: jellyfin
        environment:
          - PUID=1001
          - PGID=1001
          - TZ=Asia/Kolkata
        volumes:
          - /home/poweruser/Docker_ContainerData/jellyfinn:/config
          - /mnt/Media/share/TVShows/:/data/tvshows
          - /mnt/Media/share/Movies:/data/movies
          - /opt/vc/lib:/opt/vc/lib #optional
        ports:
          - 8096:8096
          - 8920:8920 #optional
        devices:
          #- /dev/dri:/dev/dri #optional
          #- /dev/vcsm:/dev/vcsm #optional
          - /dev/vchiq:/dev/vchiq #optional
          - /dev/video10:/dev/video10 #optional
          - /dev/video11:/dev/video11 #optional
          - /dev/video12:/dev/video12 #optional
        restart: unless-stopped
          

#    reverse-proxy:
#        # The official v2 Traefik docker image
#        image: traefik:v2.2
#        # Enables the web UI and tells Traefik to listen to docker
#        command: --api.insecure=true --providers.docker
#        ports:
#            # The HTTP port
#            - "80:80"
#            # The Web UI (enabled by --api.insecure=true)
#            - "8080:8080"
#        volumes:
#            # So that Traefik can listen to the Docker events
#            - /var/run/docker.sock:/var/run/docker.sock
      